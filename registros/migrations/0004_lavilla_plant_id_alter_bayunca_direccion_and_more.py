# Generated by Django 5.1.4 on 2025-01-05 21:52

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('plants', '0005_alter_signs_direccion_alter_signs_metadata_and_more'),
        ('registros', '0003_bayunca_plant_id'),
    ]

    operations = [
        migrations.AddField(
            model_name='lavilla',
            name='plant_id',
            field=models.ForeignKey(blank=True, help_text='Planta asociada al valor registrado.', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='lavilla_values', to='plants.plant'),
        ),
        migrations.AlterField(
            model_name='bayunca',
            name='direccion',
            field=models.IntegerField(blank=True, help_text='Dirección IOA de IEC104, no se usa en MODBUS.', null=True),
        ),
        migrations.AlterField(
            model_name='lavilla',
            name='direccion',
            field=models.IntegerField(blank=True, help_text='Dirección IOA de IEC104, no se usa en MODBUS.', null=True),
        ),
        migrations.CreateModel(
            name='General',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('REG_CA', models.IntegerField(help_text='Código de Registro MODBUS o Dirección Común IEC104.')),
                ('value', models.FloatField(help_text='Valor medido o capturado del registro.')),
                ('direccion', models.IntegerField(blank=True, help_text='Dirección IOA de IEC104, no se usa en MODBUS.', null=True)),
                ('metadata', models.JSONField(blank=True, help_text='Información adicional en formato JSON.', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Fecha y hora en que se creó el registro.')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Fecha y hora de la última actualización del registro.')),
                ('plant_id', models.ForeignKey(blank=True, help_text='Planta asociada al valor registrado.', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='general_values', to='plants.plant')),
            ],
            options={
                'verbose_name': 'General',
                'verbose_name_plural': 'General',
            },
        ),
        migrations.CreateModel(
            name='Gonzaenergy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('REG_CA', models.IntegerField(help_text='Código de Registro MODBUS o Dirección Común IEC104.')),
                ('value', models.FloatField(help_text='Valor medido o capturado del registro.')),
                ('direccion', models.IntegerField(blank=True, help_text='Dirección IOA de IEC104, no se usa en MODBUS.', null=True)),
                ('metadata', models.JSONField(blank=True, help_text='Información adicional en formato JSON.', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Fecha y hora en que se creó el registro.')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Fecha y hora de la última actualización del registro.')),
                ('plant_id', models.ForeignKey(blank=True, help_text='Planta asociada al valor registrado.', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='gonzaenergy_values', to='plants.plant')),
            ],
            options={
                'verbose_name': 'Gonzaenergy',
                'verbose_name_plural': 'Gonzaenergy',
            },
        ),
        migrations.CreateModel(
            name='Oldt',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('REG_CA', models.IntegerField(help_text='Código de Registro MODBUS o Dirección Común IEC104.')),
                ('value', models.FloatField(help_text='Valor medido o capturado del registro.')),
                ('direccion', models.IntegerField(blank=True, help_text='Dirección IOA de IEC104, no se usa en MODBUS.', null=True)),
                ('metadata', models.JSONField(blank=True, help_text='Información adicional en formato JSON.', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Fecha y hora en que se creó el registro.')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Fecha y hora de la última actualización del registro.')),
                ('plant_id', models.ForeignKey(blank=True, help_text='Planta asociada al valor registrado.', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='oldt_values', to='plants.plant')),
            ],
            options={
                'verbose_name': 'Oldt',
                'verbose_name_plural': 'Oldt',
            },
        ),
        migrations.CreateModel(
            name='Produlesti',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('REG_CA', models.IntegerField(help_text='Código de Registro MODBUS o Dirección Común IEC104.')),
                ('value', models.FloatField(help_text='Valor medido o capturado del registro.')),
                ('direccion', models.IntegerField(blank=True, help_text='Dirección IOA de IEC104, no se usa en MODBUS.', null=True)),
                ('metadata', models.JSONField(blank=True, help_text='Información adicional en formato JSON.', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Fecha y hora en que se creó el registro.')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Fecha y hora de la última actualización del registro.')),
                ('plant_id', models.ForeignKey(blank=True, help_text='Planta asociada al valor registrado.', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='produlesti_values', to='plants.plant')),
            ],
            options={
                'verbose_name': 'Produlesti',
                'verbose_name_plural': 'Produlesti',
            },
        ),
        migrations.CreateModel(
            name='Sanpedro',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('REG_CA', models.IntegerField(help_text='Código de Registro MODBUS o Dirección Común IEC104.')),
                ('value', models.FloatField(help_text='Valor medido o capturado del registro.')),
                ('direccion', models.IntegerField(blank=True, help_text='Dirección IOA de IEC104, no se usa en MODBUS.', null=True)),
                ('metadata', models.JSONField(blank=True, help_text='Información adicional en formato JSON.', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Fecha y hora en que se creó el registro.')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Fecha y hora de la última actualización del registro.')),
                ('plant_id', models.ForeignKey(blank=True, help_text='Planta asociada al valor registrado.', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sanpedro_values', to='plants.plant')),
            ],
            options={
                'verbose_name': 'Sanpedro',
                'verbose_name_plural': 'Sanpedro',
            },
        ),
        migrations.CreateModel(
            name='Solchacras',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('REG_CA', models.IntegerField(help_text='Código de Registro MODBUS o Dirección Común IEC104.')),
                ('value', models.FloatField(help_text='Valor medido o capturado del registro.')),
                ('direccion', models.IntegerField(blank=True, help_text='Dirección IOA de IEC104, no se usa en MODBUS.', null=True)),
                ('metadata', models.JSONField(blank=True, help_text='Información adicional en formato JSON.', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Fecha y hora en que se creó el registro.')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Fecha y hora de la última actualización del registro.')),
                ('plant_id', models.ForeignKey(blank=True, help_text='Planta asociada al valor registrado.', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='solchacras_values', to='plants.plant')),
            ],
            options={
                'verbose_name': 'Solchacras',
                'verbose_name_plural': 'Solchacras',
            },
        ),
        migrations.CreateModel(
            name='Solhuaqui',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('REG_CA', models.IntegerField(help_text='Código de Registro MODBUS o Dirección Común IEC104.')),
                ('value', models.FloatField(help_text='Valor medido o capturado del registro.')),
                ('direccion', models.IntegerField(blank=True, help_text='Dirección IOA de IEC104, no se usa en MODBUS.', null=True)),
                ('metadata', models.JSONField(blank=True, help_text='Información adicional en formato JSON.', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Fecha y hora en que se creó el registro.')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Fecha y hora de la última actualización del registro.')),
                ('plant_id', models.ForeignKey(blank=True, help_text='Planta asociada al valor registrado.', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='solhuaqui_values', to='plants.plant')),
            ],
            options={
                'verbose_name': 'Solhuaqui',
                'verbose_name_plural': 'Solhuaqui',
            },
        ),
        migrations.CreateModel(
            name='Solsantonio',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('REG_CA', models.IntegerField(help_text='Código de Registro MODBUS o Dirección Común IEC104.')),
                ('value', models.FloatField(help_text='Valor medido o capturado del registro.')),
                ('direccion', models.IntegerField(blank=True, help_text='Dirección IOA de IEC104, no se usa en MODBUS.', null=True)),
                ('metadata', models.JSONField(blank=True, help_text='Información adicional en formato JSON.', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Fecha y hora en que se creó el registro.')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Fecha y hora de la última actualización del registro.')),
                ('plant_id', models.ForeignKey(blank=True, help_text='Planta asociada al valor registrado.', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='solsantonio_values', to='plants.plant')),
            ],
            options={
                'verbose_name': 'Solsantonio',
                'verbose_name_plural': 'Solsantonio',
            },
        ),
    ]

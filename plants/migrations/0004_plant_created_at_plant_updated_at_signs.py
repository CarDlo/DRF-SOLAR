# Generated by Django 5.1.4 on 2025-01-05 18:13

import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('plants', '0003_alter_plant_modelo'),
    ]

    operations = [
        migrations.AddField(
            model_name='plant',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, default=django.utils.timezone.now, help_text='Fecha y hora en que se creó el registro.'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='plant',
            name='updated_at',
            field=models.DateTimeField(auto_now=True, help_text='Fecha y hora de la última actualización del registro.'),
        ),
        migrations.CreateModel(
            name='Signs',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reg_ca', models.CharField(blank=True, help_text='Número de registro utilizado para identificar la variable medida.', max_length=255, null=True)),
                ('direccion', models.CharField(blank=True, help_text='Dirección asociada a la medición o registro.', max_length=255, null=True)),
                ('meta', models.CharField(blank=True, help_text='Etiqueta o nombre descriptivo del estado del dispositivo o variable monitoreada.', max_length=255, null=True)),
                ('description', models.TextField(blank=True, help_text='Descripción textual del estado o variable monitoreada.', null=True)),
                ('object_type', models.CharField(blank=True, help_text='Tipo de objeto o registro utilizado.', max_length=255, null=True)),
                ('data_type', models.CharField(blank=True, help_text="Tipo de dato registrado, como 'Single' o 'Double'.", max_length=255, null=True)),
                ('scaler', models.FloatField(blank=True, help_text='Factor de escala o conversión aplicado al valor medido.', null=True)),
                ('units', models.CharField(blank=True, help_text='Unidades de medida del valor registrado.', max_length=255, null=True)),
                ('inversor', models.CharField(blank=True, help_text='Identificación del inversor asociado al registro.', max_length=255, null=True)),
                ('panel', models.CharField(blank=True, help_text='Nombre del panel o subgrupo de equipos al que está asociado el registro.', max_length=255, null=True)),
                ('equip_sist', models.CharField(blank=True, help_text='Equipo o sistema específico relacionado con el registro de medición.', max_length=255, null=True)),
                ('min_value', models.FloatField(blank=True, help_text='Valor mínimo permitido para la variable monitoreada.', null=True)),
                ('max_value', models.FloatField(blank=True, help_text='Valor máximo permitido para la variable monitoreada.', null=True)),
                ('protocolo', models.CharField(blank=True, choices=[('IEC104', 'IEC104'), ('MODBUS', 'MODBUS')], help_text='Protocolo de comunicación utilizado para la transmisión de datos.', max_length=10, null=True)),
                ('metadata', models.JSONField(blank=True, help_text='Metadatos adicionales del registro.', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Fecha y hora en que se creó el registro.')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Fecha y hora de la última actualización del registro.')),
                ('plant_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='signs', to='plants.plant')),
            ],
            options={
                'verbose_name': 'Señal registrada',
                'verbose_name_plural': 'Señales registrados',
            },
        ),
    ]
